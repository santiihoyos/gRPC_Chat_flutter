syntax = "proto3";

option java_multiple_files = true;
package com.santiihoyos.grpcchat.data.grpc.model.grpcchat;

/**
 * HandShake message between Client and Server.
 */
message Hello {
    string nickName = 1;
}

/*
 * Chat user identity, is is generated by service.
 */
message User {
    int32 id = 1;
    string nickName = 2;
}

/*
 * Chat message with sender information
 * epoch time from epoch
*/
message Message {
    User user = 1;
    int64 epochTime = 2;
    string message = 4;
}

/*
 * Result for write operation.
 */
message MessageResult {
    ACK ack = 1;
}

/*
 * Types of call result
 */
enum ACK {
    NOT_SENT = 0;
    SENT = 1;
}

/*
 * Chat room with list of messages
 */
message History {
    repeated Message messages = 1;
}

/*
 * Message to write.
 */
message WriteMessage {
    int32 userId = 1;
    string message = 2;
}

service Chat {

    /*
     * Call to server to get userId.
     * returns genereated [User] from server.
     */
    rpc hello(Hello) returns (User) {}

    /*
     * Returns to user.
     */
    rpc getHistory(User) returns (History) { }

    /*
     *  Rpc function to write message into Room.
     */
    rpc write (WriteMessage) returns (MessageResult) {}

    /*
     * RPC to listen room chat messages from stream.
     */
    rpc listen (User) returns (stream Message) {}
}
